name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ANDROID_API_LEVEL: 31
  ANDROID_BUILD_TOOLS_VERSION: '31.0.0'

jobs:
  build:
    name: Build & Tests & Lint (${{ matrix.variant }})
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        include:
          - variant: debug
            flavor: ''           # если нет productFlavors
            gradleName: Debug
            apkPath: app/build/outputs/apk/debug/app-debug.apk
          - variant: release
            flavor: ''
            gradleName: Release
            apkPath: app/build/outputs/apk/release/app-release-unsigned.apk

    steps:
      ## 1. Checkout & JDK
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      ## 2. Принимаем SDK лицензию и ставим нужные платформы/build-tools
      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses

      - name: Install SDK components
        run: |
          sdkmanager "platform-tools" \
                     "platforms;android-${{ env.ANDROID_API_LEVEL }}" \
                     "build-tools;${{ env.ANDROID_BUILD_TOOLS_VERSION }}"

      ## 3. Gradle: lint, unit tests, assemble
      - name: Run lint
        run: ./gradlew lint${{ matrix.gradleName }}

      - name: Run unit tests
        run: ./gradlew test${{ matrix.gradleName }}UnitTest

      - name: Assemble ${{ matrix.gradleName }}
        run: ./gradlew assemble${{ matrix.gradleName }}

      ## 4. Upload APK
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.variant }}.apk
          path: ${{ matrix.apkPath }}

  notify:
    name: Telegram Notification on Failure
    runs-on: ubuntu-latest
    needs: build
    if: ${{ failure() }}

    steps:
      - name: Send Telegram alert
        uses: appleboy/telegram-action@v0.3.0
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            ⚠️ *CI Failed* в `${{ github.repository }}`  
            Workflow: `${{ github.workflow }}`  
            Run: #${{ github.run_number }}  
            Commit: `${{ github.sha }}`  
            • Job: build → `${{ needs.build.result }}`  
            [Open run details](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
