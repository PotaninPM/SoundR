name: Android CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  ANDROID_API_LEVEL: 31
  ANDROID_BUILD_TOOLS_VERSION: 31.0.0
  EMULATOR_API_LEVEL: 31
  EMULATOR_IMAGE: google_apis x86_64

jobs:
  build:
    name: Build & Unit Tests & Lint (${{
      matrix.buildType }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - buildType: Debug
            apkFolder: debug
          - buildType: Release
            apkFolder: release

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: üõ† Grant execute for gradlew
        run: chmod +x gradlew

      - name: üì¶ Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles(
            '**/*.gradle*','**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: ü§ñ Install Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: ${{ env.ANDROID_API_LEVEL }}
          build-tools: ${{ env.ANDROID_BUILD_TOOLS_VERSION }}
          components: |
            platform-tools
            tools
            emulator
            build-tools;${{ env.ANDROID_BUILD_TOOLS_VERSION }}
            platform;android-${{ env.ANDROID_API_LEVEL }}

      - name: ‚úÖ Accept SDK licenses
        run: yes | sdkmanager --licenses

      - name: üîç Run lint
        run: ./gradlew lint${{ matrix.buildType }}

      - name: üß™ Run unit tests
        run: ./gradlew test${{ matrix.buildType }}UnitTest

      - name: üèó Assemble ${{ matrix.buildType }} APK
        run: ./gradlew assemble${{ matrix.buildType }}

      - name: ‚òÅÔ∏è Upload ${{ matrix.buildType }} APK
        uses: actions/upload-artifact@v3
        with:
          name: app-${{ matrix.buildType }}.apk
          path: app/build/outputs/apk/${{ matrix.apkFolder }}/app-${{ matrix.apkFolder }}.apk

  instrumentation:
    name: Instrumentation Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: üõ† Grant execute for gradlew
        run: chmod +x gradlew

      - name: ü§ñ Install Android SDK & Emulator
        uses: android-actions/setup-android@v2
        with:
          api-level: ${{ env.ANDROID_API_LEVEL }}
          build-tools: ${{ env.ANDROID_BUILD_TOOLS_VERSION }}
          components: |
            platform-tools
            emulator
            system-images;android-${{ env.EMULATOR_API_LEVEL }};${{ env.EMULATOR_IMAGE }}

      - name: ‚úÖ Accept SDK licenses
        run: yes | sdkmanager --licenses

      - name: üñ•Ô∏è Start emulator & run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.EMULATOR_API_LEVEL }}
          target: google_apis
          arch: x86_64
          force-avd-creation: true
          emulator-options: -no-window -no-audio
          script: ./gradlew connectedDebugAndroidTest

      - name: üìÇ Upload instrumentation report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ui-test-results
          path: app/build/reports/androidTests/connected

  notify:
    name: Telegram Notification on Failure
    runs-on: ubuntu-latest
    needs: [build, instrumentation]
    if: >
      needs.build.result == 'failure' ||
      needs.instrumentation.result == 'failure'

    steps:
      - name: üö® Send Telegram alert
        uses: appleboy/telegram-action@v0.3.0
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            ‚ö†Ô∏è *CI Failed* in `${{ github.repository }}`  
            Workflow: `${{ github.workflow }}`  
            Run: #${{ github.run_number }}  
            Commit: `${{ github.sha }}`  
            *Results:*  
            ‚Ä¢ build: `${{ needs.build.result }}`  
            ‚Ä¢ instrumentation: `${{ needs.instrumentation.result }}`  
            [View run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
