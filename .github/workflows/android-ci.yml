name: Android CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    name: Build & Unit Tests & Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: [Debug, Release]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 31
          build-tools: 31.0.0
          components: |
            platform-tools
            build-tools;31.0.0
            platform;android-31

      - name: Accept SDK licenses
        run: yes | sdkmanager --licenses

      - name: Run lint
        run: ./gradlew lint${{ matrix.variant }}

      - name: Run unit tests
        run: ./gradlew test${{ matrix.variant }}UnitTest

      - name: Assemble ${{ matrix.variant }} APK
        run: ./gradlew assemble${{ matrix.variant }}

      - name: Upload ${{ matrix.variant }} APK
        uses: actions/upload-artifact@v3
        with:
          name: app-${{ matrix.variant }}.apk
          path: app/build/outputs/apk/${{ matrix.variant.toLowerCase() }}/app-${{ matrix.variant.toLowerCase() }}.apk

  instrumentation:
    name: Instrumentation Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Install Android SDK & Emulator
        uses: android-actions/setup-android@v2
        with:
          api-level: 31
          build-tools: 31.0.0
          components: |
            platform-tools
            emulator
            system-images;android-31;google_apis;x86_64

      - name: Accept SDK licenses
        run: yes | sdkmanager --licenses

      - name: Start emulator and run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          target: google_apis
          arch: x86_64
          emulator-options: -no-window -no-audio
          script: ./gradlew connectedDebugAndroidTest

      - name: Upload instrumentation test report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ui-test-results
          path: app/build/reports/androidTests/connected

  notify:
    name: Telegram Notification
    runs-on: ubuntu-latest
    needs: [build, instrumentation]
    if: >
      needs.build.result == 'failure' ||
      needs.instrumentation.result == 'failure'
    steps:
      - name: Send Telegram alert
        uses: appleboy/telegram-action@v0.3.0
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          message: |
            ⚠️ *CI Failed* in `${{ github.repository }}`
            Workflow: `${{ github.workflow }}`
            Run: #${{ github.run_number }}
            Commit: `${{ github.sha }}`
            *Jobs results:*
            • build: `${{ needs.build.result }}`
            • instrumentation: `${{ needs.instrumentation.result }}`
            <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View details>
